// <auto-generated />
using System;
using IntopaloApi.System_for_data_governance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntopaloApi.Migrations
{
    [DbContext(typeof(DataGovernanceDBContext))]
    [Migration("20181120050459_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Base", b =>
                {
                    b.Property<int>("BaseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("BaseID");

                    b.ToTable("Bases");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Base");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.KeyRelationship", b =>
                {
                    b.Property<int>("BaseFromId");

                    b.Property<int>("BaseToId");

                    b.Property<string>("Type");

                    b.HasKey("BaseFromId", "BaseToId");

                    b.HasIndex("BaseToId");

                    b.ToTable("KeyRelationships");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Database", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.Base");

                    b.Property<string>("DBName");

                    b.Property<string>("DBType");

                    b.ToTable("Database");

                    b.HasDiscriminator().HasValue("Database");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Field", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.Base");

                    b.Property<string>("FieldName");

                    b.Property<string>("FieldType");

                    b.Property<int?>("StructuredBaseBaseID");

                    b.HasIndex("StructuredBaseBaseID");

                    b.ToTable("Field");

                    b.HasDiscriminator().HasValue("Field");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Schema", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.Base");

                    b.Property<string>("SchemaName");

                    b.ToTable("Schema");

                    b.HasDiscriminator().HasValue("Schema");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.StructuredBase", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.Base");


                    b.ToTable("StructuredBase");

                    b.HasDiscriminator().HasValue("StructuredBase");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.UnstructuredFile", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.Base");

                    b.Property<string>("FilePath")
                        .HasColumnName("UnstructuredFile_FilePath");

                    b.ToTable("UnstructuredFile");

                    b.HasDiscriminator().HasValue("UnstructuredFile");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Collection", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.StructuredBase");

                    b.Property<string>("CollectionName");

                    b.ToTable("Collection");

                    b.HasDiscriminator().HasValue("Collection");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.StructuredFile", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.StructuredBase");

                    b.Property<string>("FilePath");

                    b.ToTable("StructuredFile");

                    b.HasDiscriminator().HasValue("StructuredFile");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Table", b =>
                {
                    b.HasBaseType("IntopaloApi.System_for_data_governance.StructuredBase");

                    b.Property<int?>("SchemaBaseID");

                    b.Property<string>("TableName");

                    b.HasIndex("SchemaBaseID");

                    b.ToTable("Table");

                    b.HasDiscriminator().HasValue("Table");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.KeyRelationship", b =>
                {
                    b.HasOne("IntopaloApi.System_for_data_governance.Base", "BaseFrom")
                        .WithMany("KeyRelationshipFrom")
                        .HasForeignKey("BaseFromId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IntopaloApi.System_for_data_governance.Base", "BaseTo")
                        .WithMany("KeyRelationshipTo")
                        .HasForeignKey("BaseToId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Field", b =>
                {
                    b.HasOne("IntopaloApi.System_for_data_governance.StructuredBase", "StructuredBase")
                        .WithMany("Fields")
                        .HasForeignKey("StructuredBaseBaseID");
                });

            modelBuilder.Entity("IntopaloApi.System_for_data_governance.Table", b =>
                {
                    b.HasOne("IntopaloApi.System_for_data_governance.Schema", "Schema")
                        .WithMany("Tables")
                        .HasForeignKey("SchemaBaseID");
                });
#pragma warning restore 612, 618
        }
    }
}
